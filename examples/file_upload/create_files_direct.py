#!/usr/bin/env python3
import os

# Create upload directory structure
os.makedirs('/tmp/outputs/upload', exist_ok=True)

# JPEG file (minimal valid JPEG)
jpeg_data = bytes([
    0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01,
    0x01, 0x01, 0x00, 0x48, 0x00, 0x48, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43,
    0x00, 0x08, 0x06, 0x06, 0x07, 0x06, 0x05, 0x08, 0x07, 0x07, 0x07, 0x09,
    0x09, 0x08, 0x0A, 0x0C, 0x14, 0x0D, 0x0C, 0x0B, 0x0B, 0x0C, 0x19, 0x12,
    0x13, 0x0F, 0x14, 0x1D, 0x1A, 0x1F, 0x1E, 0x1D, 0x1A, 0x1C, 0x1C, 0x20,
    0x24, 0x2E, 0x27, 0x20, 0x22, 0x2C, 0x23, 0x1C, 0x1C, 0x28, 0x37, 0x29,
    0x2C, 0x30, 0x31, 0x34, 0x34, 0x34, 0x1F, 0x27, 0x39, 0x3D, 0x38, 0x32,
    0x3C, 0x2E, 0x33, 0x34, 0x32, 0xFF, 0xD9
]) + b'Test JPEG content ' * 500  # Pad to make it larger

# PNG file (minimal valid PNG)
png_data = bytes([
    0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
    0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53, 0xDE, 0x00, 0x00, 0x00,
    0x0C, 0x49, 0x44, 0x41, 0x54, 0x08, 0x99, 0x01, 0x01, 0x00, 0x00, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x73, 0x75, 0x00, 0x00, 0x00,
    0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
]) + b'Test PNG content ' * 400  # Pad to make it larger

# GIF file (minimal valid GIF)
gif_data = bytes([
    0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x01, 0x00, 0x01, 0x00, 0x80, 0x00,
    0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x21, 0xFE, 0x10, 0x54, 0x65,
    0x73, 0x74, 0x20, 0x47, 0x49, 0x46, 0x20, 0x63, 0x6F, 0x6E, 0x74, 0x65,
    0x6E, 0x74, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
    0x00, 0x02, 0x02, 0x04, 0x01, 0x00, 0x3B
]) + b'Test GIF content ' * 300

# Create sample files
files_to_create = {
    '/tmp/outputs/upload/sample_image.jpg': jpeg_data,
    '/tmp/outputs/upload/sample_image.png': png_data,
    '/tmp/outputs/upload/sample_image.gif': gif_data,
    '/tmp/outputs/upload/avatar.jpg': jpeg_data[:20000],  # Smaller version
    '/tmp/outputs/upload/avatar.png': png_data[:15000],   # Smaller version
    '/tmp/outputs/upload/invalid_format.txt': b'This is a text file, not an image. Should be rejected.',
    '/tmp/outputs/upload/invalid_avatar.gif': gif_data[:10000],  # GIF not allowed for avatars
    '/tmp/outputs/upload/large_image.jpg': jpeg_data + b'Large file content ' * 50000  # ~3MB
}

print("Creating sample files for APIFlask file upload example...\n")

for filename, content in files_to_create.items():
    with open(filename, 'wb') as f:
        f.write(content)
    size = len(content)
    size_str = f"{size:,} bytes"
    if size > 1024:
        size_str += f" ({size/1024:.1f} KB)"
    if size > 1024*1024:
        size_str += f" ({size/(1024*1024):.1f} MB)"
    
    basename = os.path.basename(filename)
    if basename.startswith('invalid_'):
        validation = " ❌ (for testing validation)"
    elif basename == 'large_image.jpg':
        validation = " ⚠️  (may exceed 2MB avatar limit)"
    else:
        validation = " ✅ (valid)"
        
    print(f"Created {basename:<20} {size_str}{validation}")

print(f"\nSample files created in upload/ directory!")
print("These files can be used to test the file upload endpoints.")
